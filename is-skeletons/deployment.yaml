apiVersion: v1
kind: ConfigMap
metadata:
  name: skeletons
  namespace: default
data:
  detector: |-
    {
      "broker_uri": "amqp://rabbitmq.default",
      "zipkin_host": "zipkin.default",
      "zipkin_port": 9411,
      "models_folder": "/",
      "resize": {
        "width": 720,
        "height": 544
      },
      "model": "MOBILENET_THIN",
      "resize_out_ratio": 4.0
    }

---

apiVersion: extensions/v1beta1 
kind: Deployment
metadata:
  name: "is-skeletons-detector"
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: detector
    spec:
      containers:
      - name: "0"
        image: viros/is-skeletons:1-detector
        command: ["python"]
        args: ["stream.py", "/opt/options.json"]
        imagePullPolicy: Always
        resources:
          limits: 
            memory: 2048Mi
            nvidia.com/gpu: 1
          requests:
            memory: 2048Mi
        volumeMounts:
          - name: options
            mountPath: /opt
      - name: "1"
        image: viros/is-skeletons:1-detector
        command: ["python"]
        args: ["stream.py", "/opt/options.json"]
        imagePullPolicy: Always
        resources:
          limits: 
            memory: 2048Mi
          requests:
            memory: 2048Mi
        volumeMounts:
          - name: options
            mountPath: /opt
      - name: "2"
        image: viros/is-skeletons:1-detector
        command: ["python"]
        args: ["stream.py", "/opt/options.json"]
        imagePullPolicy: Always
        resources:
          limits: 
            memory: 2048Mi
          requests:
            memory: 2048Mi
        volumeMounts:
          - name: options
            mountPath: /opt
      - name: "3"
        image: viros/is-skeletons:1-detector
        command: ["python"]
        args: ["stream.py", "/opt/options.json"]
        imagePullPolicy: Always
        resources:
          limits: 
            memory: 2048Mi
          requests:
            memory: 2048Mi
        volumeMounts:
          - name: options
            mountPath: /opt
      volumes:
      - name: options
        configMap:
          name: skeletons
          items:
          - key: detector
            path: options.json
